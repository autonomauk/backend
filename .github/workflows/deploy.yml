# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Deploy backend
on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  generate-changelog:
    name: Generate changelog and update release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: config/cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

      - name: Upload the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: CHANGES.md
          file_glob: true
          overwrite: true
          tag: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body: "${{ needs.generate-changelog.outputs.release_body }}"


  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
          
    - name: Add GitHub to the SSH known hosts file
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      
    - name: Stop backend
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo systemctl stop Autonoma@worker.service Autonoma@server.service"
        
    - name: Sync to server
      run: rsync -avr --rsh "ssh" --delete-after --delete-excluded ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.API_DIR }}
    
    - name: Install packages
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{secrets.API_DIR}}; python3.9 -m pip install -r requirements.txt"
        
    - name: Decrypt config.py
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{secrets.API_DIR}}; openssl enc -d -aes-256-cbc -pbkdf2 -in config/config.py.enc -out config/config.py -k ${{ secrets.CONFIG_KEY }}"
    
    - name: MongoDB migrations
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{secrets.API_DIR}}; python3.9 . --migrate --env=production"    

    - name: Start backend back up
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo systemctl start Autonoma@worker.service Autonoma@server.service"
    
  
